steps:

    #
    # Building build container
    #
    
    # Try to pull build image
    - name: 'gcr.io/cloud-builders/docker'
      entrypoint: 'bash'
      args:
      - '-c'
      - |
        docker pull eu.gcr.io/$PROJECT_ID/pyslo-builder:latest || exit 0    
    #  Build image, using cahced image if available.
    - id: build-builder
      name: gcr.io/cloud-builders/docker
      dir: cloudbuild/
      args: [
                'build',
                '--rm=false',
                '-t','eu.gcr.io/$PROJECT_ID/pyslo-builder:latest',
                '--cache-from', 'eu.gcr.io/$PROJECT_ID/pyslo-builder:latest',
                '-f', './Dockerfile', '.'
        ]
    
    #
    # Testing
    #

    # - id: lint
    #   name: eu.gcr.io/$PROJECT_ID/pyslo-builder:latest
    #   dir: pyslo
    #   entrypoint: flake8
    #   waitFor:
    #     - build-builder

    - id: test
      name: eu.gcr.io/$PROJECT_ID/pyslo-builder:latest
      args: ['cloudbuild/scripts/test.sh']
      waitFor:
        # - lint
        - build-builder

    # 
    # Build package. Note we build to persistent storage
    # so that we can the publish to PyPI
    # 

    - id: build-package
      name: eu.gcr.io/$PROJECT_ID/pyslo-builder:latest
      args: ['cloudbuild/scripts/build.sh']
      waitFor:
        - test      

    #
    # Deploy to PyPI if its a new version number
    #        

    - name: eu.gcr.io/$PROJECT_ID/pyslo-builder:latest
      id: 'push to pypi'
      secretEnv: ['PYPI_PASSWORD']
      env: ['_PYPI_USERNAME=mbeken']
      args: ['cloudbuild/scripts/deploy.sh']
      waitFor:
        - build-package

# Define image so that it is pushed (think cached for next build)
images: ['eu.gcr.io/$PROJECT_ID/pyslo-builder:latest']
secrets:
  - kmsKeyName: 'projects/tidbitz/locations/global/keyRings/cloud-build/cryptoKeys/pypi-password' 
    secretEnv:
      PYPI_PASSWORD: 'CiQAOgNfDqbt0KjcP/dh7QJ+ZGag+DZTw9/NHmJ7AL9Dos0ys8QSNQDNmejPkfSs3XG/Z3dRq8Aj4RU8MEg4mecWiBpaIEZRpyipvvJxKATKnsLhfcpDmo8YDOzD'
